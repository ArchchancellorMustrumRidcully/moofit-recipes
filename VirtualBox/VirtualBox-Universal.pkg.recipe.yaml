Description: Builds the Intel and Silicon instaler packages into a single package
Identifier: com.github.moofit-recipes.pkg.VirtualBox-Universal
Input:
  NAME: VirtualBox
  URL: https://www.virtualbox.org/wiki/Downloads
  ARM: Silicon
  INTEL: Intel

MinimumVersion: '2.3'
ParentRecipe: com.github.moofit-recipes.download.VirtualBox-Universal
Process:

  - Processor: PkgRootCreator
    Arguments:
      pkgdirs:
        Applications: "0775"
      pkgroot: "%RECIPE_CACHE_DIR%/%INTEL%"

  - Processor: FileFinder
    Arguments:
      pattern: "%RECIPE_CACHE_DIR%/Applications/%INTEL%/%NAME%.app"

  - Processor: Copier
    Arguments:
      source_path: "%found_filename%"
      destination_path: "%pkgroot%/Applications/%NAME%.app"

  - Processor: PkgCreator
    Arguments:
      pkg_request:
        chown:
          - group: admin
            path: Applications
            user: root
        id: "%bundleid%.%INTEL%"
        options: purge_ds_store
        pkgname: "%NAME%_%INTEL%-%version%"
        pkgroot: "%RECIPE_CACHE_DIR%/%INTEL%"
        version: "%version%"

  - Processor: PkgRootCreator
    Arguments:
      pkgdirs:
        Applications: "0775"
      pkgroot: "%RECIPE_CACHE_DIR%/%ARM%"

  - Processor: FileFinder
    Arguments:
      pattern: "%RECIPE_CACHE_DIR%/Applications/%ARM%/%NAME%.app"

  - Processor: Copier
    Arguments:
      source_path: "%found_filename%"
      destination_path: "%pkgroot%/Applications/%NAME%.app"

  - Processor: PkgCreator
    Arguments:
      pkg_request:
        chown:
          - group: admin
            path: Applications
            user: root
        id: "%bundleid%.%ARM%"
        options: purge_ds_store
        pkgname: "%NAME%_%ARM%-%version%"
        pkgroot: "%RECIPE_CACHE_DIR%/%ARM%"
        version: "%version%"

  - Processor: PkgRootCreator
    Arguments:
      pkgdirs:
        scripts: "0755"
        root: "0755"
        root/private: "0755"
        root/private/tmp: "0777"
      pkgroot: "%RECIPE_CACHE_DIR%/universal"

  - Processor: FileMover
    Arguments:
      overwrite: false
      source: "%RECIPE_CACHE_DIR%/%NAME%_%INTEL%-%version%.pkg"
      target: "%RECIPE_CACHE_DIR%/universal/root/private/tmp/%NAME%_%INTEL%-%version%.pkg"

  - Processor: FileMover
    Arguments:
      overwrite: false
      source: "%RECIPE_CACHE_DIR%/%NAME%_%ARM%-%version%.pkg"
      target: "%RECIPE_CACHE_DIR%/universal/root/private/tmp/%NAME%_%ARM%-%version%.pkg"

  - Processor: FileCreator
    Arguments:
      file_path: "%RECIPE_CACHE_DIR%/universal/scripts/postinstall"
      file_mode: "0755"
      file_content: |
        #!/bin/zsh

        # Set variables
        declare -r INTEL="$3/private/tmp/%NAME%_%INTEL%-%version%.pkg"
        declare -r APPLE_SILICON="$3/private/tmp/%NAME%_%ARM%-%version%.pkg"

        # Determine architecture
        ARCH=$(/usr/bin/arch)

        # Install corresponding package
        if [[ "${ARCH}" == i386 ]]
        then
            /usr/sbin/installer -pkg "${INTEL}" -target "$3"
            EXIT_CODE=$?
        else
            /usr/sbin/installer -pkg "${APPLE_SILICON}" -target "$3"
            EXIT_CODE=$?
        fi

        echo "Cleaning up..."
        /bin/rm -rf "${INTEL}" "${APPLE_SILICON}"

        # Check exit code and bail if the package didn't install correctly
        if [[ "${EXIT_CODE}" -ne 0 ]]
        then
            echo "Something went wrong during package installation. Please check install.log and try again. Bailing..."
            exit 1
        fi

  - Processor: PkgCreator
    Arguments:
      pkg_request:
        id: "%bundleid%"
        options: purge_ds_store
        pkgname: "%NAME%_Universal-%version%"
        pkgroot: "%RECIPE_CACHE_DIR%/universal/root"
        scripts: "%RECIPE_CACHE_DIR%/universal/scripts"
        version: "%version%"

  - Processor: PathDeleter
    Arguments:
      path_list:
        - "%RECIPE_CACHE_DIR%/universal"
        - "%RECIPE_CACHE_DIR%/%INTEL%"
        - "%RECIPE_CACHE_DIR%/%ARM%"
        - "%RECIPE_CACHE_DIR%/Applications"
        - "%RECIPE_CACHE_DIR%/extract"